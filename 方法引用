package Demo0928;

public class Demo01Printable {
    //定义一个方法，参数传递Printable接口，对字符串进行打印
    public static void printString(Printtable p){
        p.print("HelloWorld");
    }

    public static void main(String[] args) {
        ////调用printString方法，方法的参数Printable是一个函数式接口,所以可以传递Lambda
        printString((s)->{
            System.out.println(s);
        });/*

        分析:
        Lambda表达式的目的,打印参数传递的字符串
        把参数s,传递给了system. out对象,调用out对象中的方法printLn对字符串进行了输出注意:
            1.system.out对象是已经存在的
            2.printLn方法也是已经存在的
        所以我们可以使用方法引用来优化L ambda表达式
        可以使用System.out方法直接引用(调用)println方法package Demo0928;

import java.util.stream.Stream;

/*
* 定义一个打印的函数式接口*/
@FunctionalInterface
public interface Printtable {
    //定义字符串的抽象方法
    void print(String s);
}

*/
        printString(System.out::println);
    }
}
